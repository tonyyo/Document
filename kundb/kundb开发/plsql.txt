, {
	input:  "create package pack1 is procedure get_net_value(p_order_id NUMBER)",
	output: "create package pack1 is procedure get_net_value(p_order_id NUMBER)",
}

/* Oracle PL Support */
create_package_stmt:
  CREATE PACKAGE package_spec ';' '/'
  {

  }
| CREATE OR REPLACE PACKAGE packge_spec ';' '/'
  {

  }

package_spec:
  table_name invoker_rights_clause is_or_as package_obj_spec_list END package_name_opt
  {

  }

create_package_body_stmt:
  CREATE PACKAGE BODY package_body ';' '/'
  {

  }
| CREATE OR REPLACE PACKAGE BODY package_body ';' '/'
  {

  }

package_body:
  table_name is_or_as package_obj_body_list exception_clause_opt END package_name_opt
  {

  }

package_name_opt:
  {

  }
| package_name
  {

  }


begin_stmts_opt:
  {

  }
| BEGIN seq_of_statements
  {

  }

exception_clause_opt:
  {

  }
| exception_clause
  {

  }


exception_clause:
  EXCEPTION exception_handler_list
  {

  }

exception_handler_list:
  exception_handler
  {

  }
| exception_handler_list exception_handler
  {

  }

exception_handler:
  WHEN exception_name exception_cases THEN seq_of_statements
  {

  }

exception_cases:
  {

  }
| OR exception_name
  {

  }
| exception_cases OR exception_name
  {

  }

package_obj_spec_list:
  {

  }
| package_obj_spec
  {

  }
| package_obj_list package_obj_spec
  {

  }

package_obj_spec:
  variable_declaration
  {

  }
| subtype_declaration
  {

  }
| cursor_declaration
  {

  }
| exception_declaration
  {

  }
| pragma_declaration
  {

  }
| record_declaration
  {

  }
| table_declaration
  {

  }
| procedure_spec
  {

  }
| function_spec
  {

  }
| preprocessor_statement
  {

  }

package_obj_body_list:
  {

  }
| package_obj_body
  {

  }
| package_obj_spec_list package_obj_body
  {

  }

package_obj_body:
  variable_declaration
  {

  }
| subtype_declaration
  {

  }
| cursor_declaration
  {

  }
| exception_declaration
  {

  }
| pragma_declaration
  {

  }
| record_declaration
  {

  }
| table_declaration
  {

  }
| create_procedure_body
  {

  }
| create_function_body
  {

  }
| preprocessor_statement
  {

  }

is_or_as:
  { $$ = struct{}{} }
| IS
  { $$ = struct{}{} }
| AS
  { $$ = struct{}{} }

invoker_rights_clause:
  {

  }
| AUTHID CURRENT_USER
  {

  }
| AUTHID DEFINER
  {

  }

default_value_part:
  {

  }
| expression
  {

  }


/* PL/SQL Elements Declarations */

/* incorporates constant declaration */
variable_declaration:
  variable_name constant_opt type_spec not_null_opt default_value_part ';'
  {

  }



constant_opt:
  {

  }
| CONSTANT
  {

  }

not_null_opt:
  {

  }
| NOT NULL
  {

  }

/* Common PL/SQL Named Elements */
variable_name:
  char_set_opt id_expression
  {

  }
| char_set_opt id_expression '.' id_expression
  {

  }

char_set_name:
  id_expression
  {

  }
| char_set_name '.' id_expression
  {

  }

char_set_opt:
  {

  }
| INTRODUCER char_set_name
  {

  }

INTRODUCER:
  '_'
  {

  }

id_expression:
  regular_id
  {

  }

id_expression_list:
  id_expression
  {

  }
| id_expression_list '.' id_expression

regular_id:

// todo windowing_clause support
over_clause:
  OVER '(' partition_opt order_by_opt ')'
  {

  }

over_clause_opt:
  {

  }
| over_clause
  {

  }


/* Common PL/SQL Specs */
keep_clause:
  KEEP '(' DENSE_RANK FIRST order_by_opt ')' over_clause_opt
  {

  }

function_argument:

argument:


bind_variable:
 bind_item indicator_bind_item_opt

bind_item:
  BINDVAR
  {

  }
| ':' UNSIGNED_INTEGER
  {

  }

indicator_opt:
  {

  }
| INDICATOR
  {

  }

indicator_bind_item_opt:
  {

  }
| indicator_opt bind_item
  {

  }

general_element:

general_element_part:
  char_set_opt id_expression_list
